
== Defining a Factory Girl sequence.
spec/factories.rb

Factory.define :user do |user|
	user.name		"Michael Hartl"
	user.email		"mhartl@example.com"
	user.password	"foobar"
	user.password_confirmation "foobar"
end

Factory.sequence :email do |n|
	"person-#{n}@example.com"
end


==  invoke using the next method:

  Factory(:user, :email => Factory.next(:email))

== A test for pagination.
spec/controllers/users_controller_spec.rb:

require 'spec_helper'

describe "UsersController" do
  render_views

  describe "GET 'index' " do
    
    describe "for non-signed-in users" do
      
      it "should deny access" do
        get :index
        response.should redirect_to( signin_path)
        flash[:notice].should  =~  /sign in/i
      end
    end
    
    describe "for signed-in users" do
      
      before(:each) do
        @user = test_sign_in( Factory(:user))
        second = Factory( :user, :email => "another@example.com")
        third = Factory( :user, :email => "another@example.net")
        
        @users = [@user, second, third]
        30.times do
          @users << Factory(:user, :email => Factory.next(:email))
        end
      end

      it "should have an element for each user" do
        get   :index
        @users[0..2].each  do | user|
            response.should have_selector( "li", :content => user.name)
         end
        end
        
        it "should paginate users" do
          get :index
          response.should have_selector("div.pagination")
          response.should have_selector("span.disabled", :content => "Previous")
          response.should have_selector("a", :href => "/users?page=2", :content => "2")
          response.should have_selector("a", :href => "/users?page=2", :content => "Next")
        end
    end # End of  describe "for signed-in users"
  end # End of describe "GET 'index' "
 .
 .
 .
end
 